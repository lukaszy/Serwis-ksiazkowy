@*@{
        ViewBag.Title = "ListComments";
        Layout = "~/Views/Shared/_BookLayout.cshtml";
    }

    <h2>ListComments</h2>
    <div id="row">
        @Html.Partial("_Comment")
        </div>*@

@*@model IEnumerable<SerwisKsiazkowy.Models.Comment>*@


@model PagedList.IPagedList<SerwisKsiazkowy.Models.Comment>

@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />


@Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
<div id="comments-reviews">
    <img src="@Url.Content("~/Content/Covers/" + Model.Select(p => p.Book.CoverFileName).First())" />
    <h1>@Model.Select(p => p.Book.Title).First()</h1>
    <h2>@Model.Select(p => p.Book.Author).First()</h2>

</div>

<div id="book-details-comments">
    <h1>
        Komentarze (@ViewBag.countComments  komentarzy)
    </h1>
    <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("AddInAll", "Comment", new { bookId = @Model.Select(p => p.Book.BookId).First(), bookTitle = Model.Select(p => p.Book.Title).First().Replace(" ", "-").ToLower() }) '">
        Dodaj komentarz
    </button>
    @if (Model.Count() == 0)
    {
        <div>Brak komenatrzy</div>
    }
    else
    {
        foreach (var comments in Model)
        {

            <hr class="style1">

            <div id="book-details-comment">
                <div id="book-details-comment-details">

                    Autor:
                    @if (comments.UserId != null)
                    {
                        @comments.User.UserName

                    }

                    Data dodania: @comments.DateAdded.ToString("dd MMMM yyyy hh:mm")
                    @using (@Html.BeginForm("Delete", "Comment", new { id = comments.CommentId, bookId = comments.BookId, bookTitle = comments.Book.Title.Replace(" ", "-").ToLower().ToString() }, FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()

                        var myModal = comments.BookId + "-" + comments.CommentId;
                        <div id="button-delete">
                            <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#@myModal">Usuń</button>
                        </div>
                        <!-- Modal -->
                        <div class="modal fade" id="@myModal" tabindex="-1" role="dialog" data-keyboard="false" aria-labelledby="myModalLabel">


                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="exampleModalLabel">Potwierdzenie usunięcia</h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        @myModal
                                        Czy napewno checesz usunąć komentarz?

                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Zamknij</button>
                                        <input type="submit" value="Usuń" class="btn btn-danger" />
                                    </div>
                                </div>
                            </div>
                        </div>


                    }
                </div>
                <div id="book-details-comment-content">
                    @*@comments.Content*@
                    @Html.DisplayFor(modelItem => comments.Content)

                </div>
            </div>
        }
    }



</div>
Strona @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) / @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("ListComments", new { page }))

@*<p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table">
        @*<tr>
            <th>
                @Html.DisplayNameFor(model => model.Content)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateAdded)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BookId)
            </th>
            <th></th>
        </tr>*@

@*@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Content)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateAdded)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BookId)
            </td>
            @*<td>
                @Html.ActionLink("Edit", "Edit", new { id=item.CommentId }) |
                @Html.ActionLink("Details", "Details", new { id=item.CommentId }) |
                @Html.ActionLink("Delete", "Delete", new { id=item.CommentId })
            </td>
        </tr>
    }
*@
@*</table>*@
