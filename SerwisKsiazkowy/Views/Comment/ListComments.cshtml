@*@{
        ViewBag.Title = "ListComments";
        Layout = "~/Views/Shared/_BookLayout.cshtml";
    }

    <h2>ListComments</h2>
    <div id="row">
        @Html.Partial("_Comment")
        </div>*@

@*@model IEnumerable<SerwisKsiazkowy.Models.Comment>*@


@model PagedList.IPagedList<SerwisKsiazkowy.Models.Comment>

@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />


@Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")

    <div id="comments-reviews">
        <img src="@Url.Content("~/Content/Covers/" + Model.Select(p => p.Book.CoverFileName).First())" />
        <h1>@Model.Select(p => p.Book.Title).First()</h1>
        <h2>@Model.Select(p => p.Book.Author).First()</h2>

    </div>
    
        <div id="book-details-comments">
            <h1>
                Komentarze (@ViewBag.countComments  komentarzy)
            </h1>
            <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("AddInAll", "Comment", new { bookId = @Model.Select(p => p.Book.BookId).First(), bookTitle = Model.Select(p => p.Book.Title).First().Replace(" ", "-").ToLower() }) '">
                Dodaj komentarz
            </button>
            @if (Model.Count() == 0)
            {
                <div>Brak komenatrzy</div>
            }
            else
            {
                foreach (var comments in Model)
                {

                    <hr class="style1">

                    <div id="book-details-comment">
                        <div id="book-details-comment-details">

                            Autor:
                            @if (comments.UserId != null)
                            {
                                @comments.User.UserName

                            }

                            Data dodania: @comments.DateAdded.ToString("dd MMMM yyyy hh:mm")
                            @using (Ajax.BeginForm("DeleteComment", "Comment", new { id = comments.CommentId, bookId = comments.BookId }, new AjaxOptions
                            {
                                HttpMethod = "POST",
                                UpdateTargetId = "RefreshComment",
                                InsertionMode = InsertionMode.Replace,
                                Confirm = "Czy napewno chcesz usunąć komentarz?  " + comments.Content
                            }
                             ))
                            {
                                @Html.AntiForgeryToken()

                                <div id="button-delete">
                                    <input type="submit" value="Usuń" class="btn btn-danger" />

                                </div>

                            }
                        </div>
                        <div id="book-details-comment-content">
                            @*@comments.Content*@
                            @Html.DisplayFor(modelItem => comments.Content)
                            @Html.DisplayFor(modelItem => comments.CommentId)

                        </div>
                    </div>
                }
            }



        </div>
        Strona @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) / @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("ListComments", new { page }))



        <div id="RefreshComment">

            @*@Html.Partial("_Comment", Model.Comments)*@
            @Html.Action("GetComments", "Comment", new { bookId = @Model.Select(p => p.Book.BookId).First() })
        </div>
@section scripts{

    <script src="~/Scripts/jquery-3.3.1.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <script src="~/Scripts/handlebars.js"></script>

    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>

}




@*<p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table">
        @*<tr>
            <th>
                @Html.DisplayNameFor(model => model.Content)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateAdded)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BookId)
            </th>
            <th></th>
        </tr>*@

@*@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Content)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateAdded)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BookId)
            </td>
            @*<td>
                @Html.ActionLink("Edit", "Edit", new { id=item.CommentId }) |
                @Html.ActionLink("Details", "Details", new { id=item.CommentId }) |
                @Html.ActionLink("Delete", "Delete", new { id=item.CommentId })
            </td>
        </tr>
    }
*@
@*</table>*@
