@model PagedList.IPagedList<SerwisKsiazkowy.Models.Comment>

@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />


@Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")

<div id="comments-reviews">
    <img src="@Url.Content("~/Content/Covers/" + Model.Select(p => p.Book.CoverFileName).First())" />
    <h1>@Model.Select(p => p.Book.Title).First()</h1>
    <h2>@Model.Select(p => p.Book.Author).First()</h2>

</div>

<div id="book-details-comments">
    <h1>
        Komentarze (@ViewBag.countComments  komentarzy)
    </h1>
    <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("AddInAll", "Comment", new { bookId = @Model.Select(p => p.Book.BookId).First(), bookTitle = Model.Select(p => p.Book.Title).First().Replace(" ", "-").ToLower() }) '">
        Dodaj komentarz
    </button>
    @if (Model.Count() == 0)
    {
        <div>Brak komenatrzy</div>
    }
    else
    {
        foreach (var comments in Model)
        {

            <hr class="style1">

            <div id="book-details-comment">
                <div id="book-details-comment-details">

                    Autor:
                    @if (comments.UserId != null)
                    {
                        @comments.User.UserName

                    }

                    Data dodania: @comments.DateAdded.ToString("dd MMMM yyyy hh:mm")
                    @using (Ajax.BeginForm("DeleteComment", "Comment", new { id = comments.CommentId, bookId = comments.BookId }, new AjaxOptions
                    {
                        HttpMethod = "POST",
                        UpdateTargetId = "RefreshComment",
                        InsertionMode = InsertionMode.Replace,
                        Confirm = "Czy napewno chcesz usunąć komentarz?  " + comments.Content
                    }
                     ))
                    {
                        @Html.AntiForgeryToken()

                        <div id="button-delete">
                            <input type="submit" value="Usuń" class="btn btn-danger" />

                        </div>

                    }
                </div>
                <div id="book-details-comment-content">
                    @Html.DisplayFor(modelItem => comments.Content)
                    @Html.DisplayFor(modelItem => comments.CommentId)

                </div>
            </div>
        }
    }



</div>
        Strona @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) / @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("ListComments", new { page }))


        <div id="RefreshComment">            
            @Html.Action("GetComments", "Comment", new { bookId = @Model.Select(p => p.Book.BookId).First() })
        </div>
        @section scripts{

            <script src="~/Scripts/jquery-3.3.1.js"></script>
            <script src="~/Scripts/jquery.validate.js"></script>
            <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
            <script src="~/Scripts/handlebars.js"></script>

            <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>

        }
