@model PagedList.IPagedList<SerwisKsiazkowy.Models.Book>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

<p>
    @*@Html.ActionLink("Dodaj książkę", "Create", new { @class = "btn btn-primary btn-large" })*@
    <button type="button" class="btn btn-primary btn-large" onclick="location.href='@Url.Action("Add", "Manage")'">
        Dodaj książke
    </button>
    <button type="button" class="btn btn-primary btn-large" onclick="location.href='@Url.Action("AddGenre", "Manage")'">
        Dodaj kategorie
    </button>
</p>

<br />
@using (Html.BeginForm())
{
    <p>
        Znajdź tytuł: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}

<table class="table">
    <tr>

        <th>
            @*@Html.DisplayNameFor(model => model.Genre.Name)*@
            @Html.ActionLink("Gatunek", "Index", new { sortOrder = ViewBag.GenreSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Title)*@
            @Html.ActionLink("Tytuł", "Index", new { sortOrder = ViewBag.TitleSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Author)*@
            @Html.ActionLink("Autor", "Index", new { sortOrder = ViewBag.AuthorSortParm, currentFilter = ViewBag.CurrentFilter })

        </th>
        <th>
            
            Liczba stron
        </th>
        <th>
            
            Rok wydania
        </th>
        <th>
            
            Wydawnictwo
        </th>

        <th>
            
            @Html.ActionLink("Ocena", "Index", new { sortOrder = ViewBag.RateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            
            Okładka
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Genre.Name)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Author)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Pages)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.YearPublished)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Publisher)
            </td>
            <td>
                @Html.Action("GetRate", "Home", new { id = item.BookId })
            </td>


            <td>
                @*@Html.DisplayFor(modelItem => item.CoverFileName)*@
                
                    <img class="manage-cover" src="@Url.Content("~/Content/Covers/" + item.CoverFileName)" />
                
            </td>
            <td>
                @*@Html.ActionLink("Edycja", "Edit", new { bookId = item.BookId })*@


                @*@Html.ActionLink("Details", "Details", new { bookId = item.BookId }) |*@
                @*@Html.ActionLink("Usuń", "Delete", new { bookId = item.BookId })*@


                @*<button type="button" class="btn btn-danger" onclick="location.href='@Url.Action("Delete", "Manage", new { id = item.BookId, title = item.Title  })'">
                        Usuń
                    </button>*@





                @using (Html.BeginForm("Delete", "Manage", new { id = item.BookId }))
                {
                    <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("Edit", "Manage", new { bookId = item.BookId }) '">
                        Edycja
                    </button>
                        var myModal = item.BookId;
                        var bookTitle = item.Title;
                    <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#@myModal">Usuń</button>
                    <!-- Modal -->
                    <div class="modal fade" id="@myModal" tabindex="-1" role="dialog" data-keyboard="false" aria-labelledby="myModalLabel">


                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="exampleModalLabel">Potwierdzenie usunięcia</h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body">
                                    Czy napewno checesz usunąć książkę "@bookTitle"?

                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Zamknij</button>
                                    <input type="submit" value="Usuń" class="btn btn-danger" />
                                </div>
                            </div>
                        </div>
                    </div>


                }



            </td>
        </tr>
    }

</table>
<br />
Strona @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) / @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
@section scripts {

    <script>

        $(document).ready(function () {



        });

        var ConfirmDelete = function (id) {
            $("#modal").val(id);
            $("#modal").modal('show');
        }
    </script>

}