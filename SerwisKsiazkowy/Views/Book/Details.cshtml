
@model SerwisKsiazkowy.ViewModels.DetailsViewModels

@{
    //@ViewBag.Title;
    Layout = "~/Views/Shared/_BookLayout.cshtml";
}

<div class="site">

    <div class="row">

        <div role="tabpanel" class="down">
            @*<div class="col-sm-2">
                    <ul class="nav nav-pills brand-pills nav-stacked" role="tablist">
                        <li role="presentation" class="brand-nav "><a href="Main.html" aria-controls="tab1" role="tab" data-toggle="tab">Lorem ipsum</a></li>
                        <li role="presentation" class="brand-nav"><a href="Book-details.html" aria-controls="tab2" role="tab" data-toggle="tab">Zombie ipsum</a></li>
                        <li role="presentation" class="brand-nav"><a href="#tab3" aria-controls="tab3" role="tab" data-toggle="tab">Gansta ipsum</a></li>
                        <li role="presentation" class="brand-nav"><a href="#tab4" aria-controls="tab4" role="tab" data-toggle="tab">Corporate ipsum</a></li>
                    </ul>
                </div>*@
            @*@Html.MvcSiteMap().SiteMapPath()*@
            @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
            <div id="book-right">

                @foreach (var book in Model.SelectedBook)
                {
                    <section id="book-details-section">
                        <div id="book-details-left">

                            <img src="@Url.Content("~/Content/Covers/" + book.CoverFileName)" />

                        </div>

                        <div id="book-details-right">
                            <div id="book-details-names">

                                <h1>
                                    @book.Title
                                </h1>
                                <br />
                                <h2>
                                    Autor: @book.Author
                                </h2>

                            </div>

                            <div id="book-details-names">


                                <h2>
                                    Wydawnictwo: @book.Publisher
                                </h2>


                                <h2>
                                    Gatunek: @book.Genre.Name
                                    @*@Model.Genres.Where(a => a.GenreId == book.GenreId).Single().Name*@

                                    @*Gatunek: @book.Genres.Where(a => a.BookId == book.BookId)*@
                                </h2>
                                <h2>
                                    Liczba stron: @book.Pages
                                </h2>
                                <h2>
                                    Data premiery: @book.YearPublished
                                </h2>
                                <h2>
                                    Ocena:
                                    @Html.Action("GetRate", "Home", new { id = book.BookId })
                                    @*@if (Model.Ratings == -1)
                                        {
                                            @Html.Label("Brak")
                                        }
                                        else
                                        {
                                            <b>@Model.Ratings</b> @Html.Label("/ 5")
                                        }*@

                                </h2>
                                <h2>

                                    Moja ocena:
                                    @if (Model.UserRate.Count() > 0)
                                    {
                                        @Model.UserRate.Select(r => r.Value).Single()
                                        @*@Html.DisplayFor(modelItem => modelItem.UserRate.Select(r => r.Value))*@
                                    }
                                    else
                                    {
                                        @Html.Label("Brak")
                                    }

                                </h2>



                            </div>
                        </div>
                        <div id="book-details-description">
                            <h1>
                                Opis książki
                            </h1>
                            @book.Description
                        </div>

                        <div id="book-details-comments">
                            <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("Index", "Review", new { bookId = book.BookId, bookTitle = book.Title.Replace(" ", "-").ToLower().ToString() }) '">
                                Dodaj recenzje
                            </button>
                            

                            @Html.Partial("ListReview", Model.Reviews)
                        </div>


                        @*@{ Html.RenderAction("Add", "Comment", new { bookId = book.BookId });}*@

                        @using (@Html.BeginForm("Add", "Comment", new { bookId = book.BookId, bookTitle = book.Title.Replace(" ", "-").ToLower().ToString() }, FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()

                            @Html.HiddenFor(model => model.NewComment.BookId)

                            <div class="form-group">
                                @*@Html.DisplayFor(model => model.NewComment.BookId)*@
                                @Html.TextAreaFor(model => model.NewComment.Content, new { @class = "form-control", rows = "5" })

                                <input type="submit" value="Dodaj komentarz" class="btn btn-default" />
                            </div>
                        }

                        @* @ViewBag.user
                            @Html.Partial("_AddComment");*@
                        @*@using (@Html.BeginForm("Add", "Comments", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()

                                <div>
                                    @Html.ValidationMessage("loginerror", "")
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(o => o.Comments)
                                    @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control", placeholder = "Wprowadź treść" } })
                                    @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                                </div>


                                <input type="submit" value="Dodaj komentarz" class="btn btn-default" />
                            }*@
                        @*<div id="book-details-comments">
                                <h1>
                                    Komentarze
                                </h1>
                                @if (Model.Comments.Count() == 0)
                                {
                                    <div>Brak komenatrzy</div>
                                }
                                else
                                {
                                    foreach (var comments in Model.Comments)
                                    {
                                        <div id="book-details-comment">
                                            <div id="book-details-comment-details">

                                                Autor: Data dodania: @comments.DateAdded.ToString("dd MMMM yyyy hh:mm")
                                            </div>
                                            <div id="book-details-comment-content">
                                                @comments.Content
                                            </div>
                                        </div>
                                    }
                                }



                            </div>*@

                        @Html.Partial("_Comment", Model.Comments)

                    </section>
                }
            </div>



        </div>
    </div>

</div>

