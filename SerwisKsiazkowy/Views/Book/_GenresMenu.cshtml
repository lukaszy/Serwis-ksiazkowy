@model SerwisKsiazkowy.ViewModels.HomeViewModel
@using SerwisKsiazkowy.Infrastructure

<div class="col-sm-2">
    <div class="genresMenu">

        <ul class="nav nav-tabs nav-stacked">
            @foreach (var genre in Model.Genres)
            {
                <li>
                    @*<a href="@Url.Action("ListGenres", "Book", new { genrename = genre.Name.ToString() })">
                        @genre.Name
                    </a>*@

                    @if (HttpContext.Current.Request.Url.AbsolutePath.Split('/').ElementAt(2) == genre.Name.ToLower().ToString())
                    {
                        <a class="btn-success btn-block" href="@Url.Action("ListGenres", "Book", new { genrename =  genre.Name.ToLower().ToString() })">
                            @genre.Name
                        </a>
                    }
                    else
                    {
                        <a class=" nav-link btn-block" href="@Url.Action("ListGenres", "Book", new { genrename =  genre.Name.ToLower().ToString() })">
                            @genre.Name
                        </a>
                    }
                </li>
            }


        </ul>

        @*@using (Html.BeginForm("FilterList", "Book", new { UrlPath = HttpContext.Current.Request.Url.AbsolutePath, page=1, genreName = ViewBag.genrename }))*@
        @using (Html.BeginForm("FilterList", "Book", new { genrename = ViewBag.genrename, listAuthor = Model.Author1 }))
        {

            @*@Html.HiddenFor(model =>model.Authors)*@
            <div class="menu-left">
                <p>Autor:</p>
                @*@Html.DropDownListFor(model => model.autor, new SelectList(Model.Authors, "Author", "Author").GroupBy(x => x.Text).Select(x => x.First()), new { id = "MultiSelectDropDown", @class= "chosen-select" })*@
                @Html.ListBoxFor(model => Model.Author1, new MultiSelectList(Model.Authors, "Author", "Author").GroupBy(x => x.Text).Select(x => x.First()), new { id = "MultiSelectDropDown", multiple = "multiple", genrename = @ViewBag.genrename, data_placeholder = "Wybierz autora..." })
                @*@Html.CheckBox(Model.Authors.Select(o=>o.Author).Distinct().ToString(),false) <label>1</label>*@
                @*@ViewBag.Authors = Model.Author1*@

            </div>
            <hr class="style1">
            <div class="menu-left">
                <p>
                    Znajdź tytuł: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { style = "width:150px;", htmlAttributes = new { @class = "form-control" } })

                </p>
            </div>
            <hr class="style1">
            <div class="menu-left">
                <p>
                    Sortowanie:
                    @Html.DropDownList("sorting", null, htmlAttributes: new { @class = "form-control" })
                </p>
            </div>
                <hr class="style1">
                <div class="slider">
                    <p>
                        <label for="ratings">Ocena</label>
                        <input type="text" id="ratings" class="ratings" readonly style="border:0; color:#f6931f; font-weight:bold; width:80%;">
                        @*<input type="text" id="MaxRatings" name="MaxRatings" readonly style="border:0; color:#f6931f; font-weight:bold; width:80%;">*@
                        @*<input type="text" id="MinRatings" name="MinRatings" readonly style="border:0; color:#f6931f; font-weight:bold; width:80%;">*@
                        @Html.HiddenFor(model => model.MaxRating, new { id = "MaxRating", name = "MaxRating" })
                        @Html.HiddenFor(model => model.MinRating, new { id = "MinRating", name = "MinRating" })

                        <div id="slider-range"></div>
                    </p>
                </div>
                <hr class="style1">
                <p><button type="submit" class="btn btn-primary  btn-block">Szukaj</button></p>
                }
                <form>
                    @*<div class="menu-left">
                        <p>Autor</p>

                        <div id="summary">

                            @foreach (var author in Model.Author)
                            {

                                <p class="collapse" id="collapseExample">
                                    {

                                    <label class="form-check">
                                        <input class="form-check-input" type="checkbox" id="@author.ToString()">
                                        <span class="form-check-label">
                                            @author.ToString()
                                        </span>
                                    </label>

                                    }
                                </p>
                            }


                            <p><a class="collapsed" data-toggle="collapse" href="#collapseExample" aria-expanded="false" aria-controls="collapseSummary"></a></p>
                        </div>
                    </div>*@



                    <p>@*<a href="@Url.Action("Filtr", "Book", new { genrename =  })">Filtr</a>*@</p>

                </form>


            </div>

        </div>

@*<ul class="nav nav-pills brand-pills nav-stacked" role="tablist">*@

