@model IEnumerable<SerwisKsiazkowy.Models.Comment>


@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@*<center><div id="result"></div></center>*@

<div id="book-details-comments">

    Wszystkich komenatrzy (@ViewBag.CommentCount)



    @if (Model.Count() == 0)
    {
        <div>Brak komenatrzy</div>
    }
    else
    {
        foreach (var comments in Model)
        {

            <hr class="style1">

            <div id="book-details-comment">
                <div id="book-details-comment-details">

                    Autor:
                    @if (comments.UserId != null)
                    {
                        @comments.User.UserName

                    }

                    Data dodania: @comments.DateAdded.ToString("dd MMMM yyyy hh:mm")
                    @*@using (@Html.BeginForm("Delete", "Comment", new { id = comments.CommentId, bookId = comments.BookId, bookTitle = comments.Book.Title.Replace(" ", "-").ToLower().ToString() }, FormMethod.Post))*@


                    @{
                        var myModal = comments.BookId + "-" + comments.CommentId;
                        var myModalId = comments.CommentId;
                    }

                    @if (ViewBag.IsAdmin)
                    {
                        using (Ajax.BeginForm("Delete", "Comment", new { id = comments.CommentId, bookId = comments.BookId }, new AjaxOptions
                        {
                            HttpMethod = "POST",
                            UpdateTargetId = "RefreshComment",
                            InsertionMode = InsertionMode.Replace,
                            OnSuccess = "Alert",
                            Confirm = "Czy napewno chcesz usunąć komentarz?  " + comments.Content
                        }
                                            ))
                        {
                            @Html.AntiForgeryToken()

                            <div id="button-delete">
                                <input type="submit" value="Usuń" class="btn btn-danger" />

                            </div>

                        }
                    }



                </div>
                <div id="book-details-comment-content">
                    @*@comments.Content*@
                    @Html.DisplayFor(modelItem => comments.Content)
                    @*@Html.DisplayFor(modelItem => comments.CommentId)
                    @Html.Action("GetChildren", "Comment", new { id = comments.CommentId })*@

                </div>


                @*@{
                    var children = Model.Where(x => x.ParentId == comments.CommentId).ToList();
                    if (children.Count() > 0)
                    {
                        <a class="odpowiedz" data-toggle="collapse" data-id="@comments.CommentId" href="#@comments.CommentId" name="Name">OdpowiedzNew</a>
                    }

                    <div class="collapse" id="@comments.CommentId">
                        @Html.Partial("DajOdpowiedzi")
                    </div>
                }*@
            </div>
        }
    }



</div>




    <script>

        function unloadModal(data) {
            alert(data.Content);
           
            //$('#myModal').modal('hide');
        };

        function Alert() {
            $('.alert-success').alert();

        };
    </script>
