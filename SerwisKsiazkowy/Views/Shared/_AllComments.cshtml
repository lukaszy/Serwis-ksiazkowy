@model PagedList.IPagedList<SerwisKsiazkowy.Models.Comment>

@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@helper RenderComments(PagedList.IPagedList<SerwisKsiazkowy.Models.Comment> comments)
{

    <div id="comments-reviews">
        <img src="@Url.Content("~/Content/Covers/" + Model.Select(p => p.Book.CoverFileName).First())" />
        <h1>
            <a href="@Url.Action("Details", "Book", new { id = @Model.Select(p => p.BookId).First(),  _title = @Model.Select(p => p.Book.Title).First().Replace(" ", "-").ToLower().ToString() } )">
                @Model.Select(p => p.Book.Title).First()
            </a>
        </h1>

        <h2>@Model.Select(p => p.Book.Author).First()</h2>

    </div>

    <div id="book-details-comments">
        <h1>
            Komentarze (@Model.TotalItemCount  komentarzy)
        </h1>
        <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("AddInAll", "Comment", new { bookId = @Model.Select(p => p.Book.BookId).First(), bookTitle = Model.Select(p => p.Book.Title).First().Replace(" ", "-").ToLower() }) '">
            Dodaj komentarz
        </button>
        @if (Model.Count() == 0)
        {
            <div>Brak komenatrzy</div>
        }
        else
        {
            foreach (var comment in comments)
            {

                <hr class="style1">

                <div id="book-details-comment">
                    <div id="book-details-comment-details">

                        Autor:
                        @if (comment.UserId != null)
                        {
                            @comment.User.UserName

                        }

                        Data dodania: @comment.DateAdded.ToString("dd MMMM yyyy hh:mm")
                        @using (Ajax.BeginForm("DeleteComment", "Comment", new { id = comment.CommentId, bookId = comment.BookId, page = Model.PageNumber }, new AjaxOptions
                        {
                            HttpMethod = "POST",
                            UpdateTargetId = "Refresh",
                            InsertionMode = InsertionMode.Replace,
                            Confirm = "Czy napewno chcesz usunąć komentarz?  " + comment.Content
                        }
                         ))
                        {
                            @Html.AntiForgeryToken()

                            <div id="button-delete">
                                <input type="submit" value="Usuń" class="btn btn-danger" />

                            </div>

                        }
                    </div>
                    <div id="book-details-comment-content">
                        @*@comments.Content*@
                        @Html.DisplayFor(modelItem => comment.Content)
                        @Html.DisplayFor(modelItem => comment.CommentId)

                    </div>
                </div>
            }
        }



    </div>
    @*<p> Strona @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) / @Model.PageCount </p>

        @Html.PagedListPager(Model, page => Url.Action("GetAllComments", new {bookId=Model.Select(p=>p.BookId).First(), page }))*@
}

<div id="Refresh">
    @*@Model.Count()*@

    @if (Model.Count() > 0)
    {
        @RenderComments(Model)
    }
    @*else
    {
        @Html.Action("GetAllComments", new { bookId = 1, page = Model.PageNumber-1 })
    }*@


    <p> Strona @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) / @Model.PageCount </p>

    @Html.PagedListPager(Model, page => Url.Action("GetAllComments", new { bookId = ViewBag.BookId, page }))
</div>