@model SerwisKsiazkowy.ViewModels.ReviewViewModel

@using (Html.BeginForm("Edit", "Review", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Review</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Review.ReviewId)
    @Html.HiddenFor(model => model.Review.BookId)
    @Html.HiddenFor(model => model.Review.DateAdded)
    @Html.HiddenFor(model => model.Review.UserId)


    <div class="form-group">
        @Html.LabelFor(model => model.Review.Content, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Review.Content, new { @class = "form-control", rows = "5" })
            @Html.ValidationMessageFor(model => model.Review.Content, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.DateAdded, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateAdded, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateAdded, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BookId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BookId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BookId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.Review.RateValue, htmlAttributes: new { @class = "control-label col-md-2" })
        @if(Model.isValueRate == false)
        {
        <div class="col-md-10">
            @Html.EditorFor(model => model.Review.Rate.Value, new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })
            @Html.ValidationMessageFor(model => model.Review.Rate.Value, "", new { @class = "text-danger" })
        </div>
        }
        else
        {
        <div class="col-md-10">
            @Html.EditorFor(model => model.Review.Rate.Value, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Review.Rate.Value, "", new { @class = "text-danger" })
        </div>
        }
        
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Zapisz" class="btn btn-default" />
        </div>
    </div>
</div>
}

    <div>
        @Html.ActionLink("Back to List", "Details", "Book", new { id = ViewBag.bookId, _title = ViewBag.bookTitle })
    </div>
